{"version":3,"sources":["components/Card/Card.js","components/Wrapper/Wrapper.js","components/Grid/index.js","components/Header/Header.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","onClick","clickCount","id","alt","name","src","image","Wrapper","children","Container","_ref","fluid","concat","Row","_ref2","Col","_ref3","size","split","map","join","Header","score","highscore","App","state","cards","gameOver","_this","setState","console","log","this","forEach","card","count","alert","find","muppet","i","sort","Math","random","_this2","components_Wrapper_Wrapper","components_Header_Header","components_Card_Card","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.6d6d431a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = props => (\n  <div className=\"card\" onClick={() => props.clickCount(props.id)}>\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image} />\n    </div>\n  </div>\n);\n\nexport default Card;\n","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Col, Row, Container } from \"../Grid\";\nimport \"./Header.css\";\n\nconst Header = props => (\n  <Container fluid>\n    <Row>\n      <Col size=\"md-1\"></Col>\n      <Col size=\"md-10\" className=\"header\">\n        <div className=\"logo\"></div>\n        <br/>\n        <div className=\"title\">LMFAO - Every day I'm shuffling</div>\n        <div className=\"instructions\">Heraclitus of Ephesus (535 BC - 475 BC): \"You cannot click on the same muppet twice.\"</div>\n        <br/>\n        <div className=\"summary\">Simple, right? Keep clicking new muppets. Score points for each new muppet you click. But be careful: you CANNOT CLICK THE SAME MUPPET TWICE! ...............................Well, you can. But only if you want to lose.</div>\n        <br/>\n        <br/>\n      </Col>\n      <Col size=\"md-1\"></Col>\n    </Row>\n    <Row>\n      <Col size=\"md-1\"></Col>\n      <Col size=\"md-10\">\n        <div className=\"scores\">\n          [ SCORE: {props.score} ] --- [ HIGH SCORE: {props.highscore} ]\n        </div>\n        <br/>\n      </Col>\n      <Col size=\"md-1\"></Col>\n    </Row>\n  </Container>\n);\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport cards from \"./cards.json\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    cards,\n    score: 0,\n    highscore: 0\n  };\n\n  gameOver = () => {\n    if (this.state.score > this.state.highscore) {\n      this.setState({highscore: this.state.score}, function() {\n        console.log(this.state.highscore);\n      });\n    }\n    this.state.cards.forEach(card => {\n      card.count = 0;\n    });\n    alert(`Oooooooooooooops! Game Over! \\nYou scored: ${this.state.score}`);\n    this.setState({score: 0});\n    return true;\n  }\n\n  clickCount = id => {\n    this.state.cards.find((muppet, i) => {\n      if (muppet.id === id) {\n        if(cards[i].count === 0){\n          cards[i].count = cards[i].count + 1;\n          this.setState({score : this.state.score + 1}, function(){\n            console.log(this.state.score);\n          });\n          this.state.cards.sort(() => Math.random() - 0.5)\n          return true; \n        } else {\n          this.gameOver();\n        }\n      }\n    });\n  }\n  \n  render() {\n    return (\n      <Wrapper>\n        <Header score={this.state.score} highscore={this.state.highscore}></Header>\n        {this.state.cards.map(card => (\n          <Card\n            clickCount={this.clickCount}\n            id={card.id}\n            key={card.id}\n            image={card.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}